{"o_vars":null,"o_types":[[{"realSpan":true,"spanInfo":{"endCol":1,"endLine":1,"filename":"src/MyLib.hs","startCol":1,"startLine":1}},[["MyLib.$trModule","GHC.Types.Module"]]],[{"realSpan":true,"spanInfo":{"endCol":52,"endLine":16,"filename":"src/MyLib.hs","startCol":42,"startLine":16}},[["lq_anf$##7205759403792805428","{v : GHC.Types.Int | v == treeSize r\n                     && v >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":66,"endLine":23,"filename":"src/MyLib.hs","startCol":41,"startLine":23}},[["MyLib.Node","{VV : forall a .\n      a -> x2:(MyLib.BinaryTree a) -> x3:(MyLib.BinaryTree a) -> {v : (MyLib.BinaryTree a) | treeSize v == (1 + treeSize x2) + treeSize x3} | VV == Node}"]]],[{"realSpan":true,"spanInfo":{"endCol":35,"endLine":22,"filename":"src/MyLib.hs","startCol":29,"startLine":22}},[["lq_anf$##7205759403792805432","{v : GHC.Types.Bool | v <=> x <= y}"]]],[{"realSpan":true,"spanInfo":{"endCol":9,"endLine":7,"filename":"src/MyLib.hs","startCol":1,"startLine":7}},[["MyLib.someFunc","(GHC.Types.IO ())"]]],[{"realSpan":true,"spanInfo":{"endCol":32,"endLine":21,"filename":"src/MyLib.hs","startCol":28,"startLine":21}},[[null,"{VV : forall a .\n      {v : (MyLib.BinaryTree a) | treeSize v == 0} | VV == Leaf}"]]],[{"realSpan":true,"spanInfo":{"endCol":11,"endLine":21,"filename":"src/MyLib.hs","startCol":1,"startLine":21}},[["MyLib.treeInsert","forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(MyLib.BinaryTree a) -> {w : (MyLib.BinaryTree a) | treeSize w == treeSize x3 + 1}"]]],[{"realSpan":true,"spanInfo":{"endCol":39,"endLine":16,"filename":"src/MyLib.hs","startCol":38,"startLine":16}},[["l","{v : (MyLib.BinaryTree a) | v == l}"]]],[{"realSpan":true,"spanInfo":{"endCol":39,"endLine":16,"filename":"src/MyLib.hs","startCol":29,"startLine":16}},[["lq_anf$##7205759403792805426","{v : GHC.Types.Int | v == treeSize l\n                     && v >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":37,"endLine":21,"filename":"src/MyLib.hs","startCol":33,"startLine":21}},[[null,"{VV : forall a .\n      {v : (MyLib.BinaryTree a) | treeSize v == 0} | VV == Leaf}"]]],[{"realSpan":true,"spanInfo":{"endCol":35,"endLine":22,"filename":"src/MyLib.hs","startCol":34,"startLine":22}},[["y","{VV : a | VV == y}"]]],[{"realSpan":true,"spanInfo":{"endCol":51,"endLine":22,"filename":"src/MyLib.hs","startCol":50,"startLine":22}},[["r","{v : (MyLib.BinaryTree a) | v == r\n                            && treeSize v >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":65,"endLine":23,"filename":"src/MyLib.hs","startCol":64,"startLine":23}},[["r","{v : (MyLib.BinaryTree a) | v == r\n                            && treeSize v >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":49,"endLine":23,"filename":"src/MyLib.hs","startCol":48,"startLine":23}},[["l","{v : (MyLib.BinaryTree a) | v == l\n                            && treeSize v >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":9,"endLine":15,"filename":"src/MyLib.hs","startCol":1,"startLine":15}},[["MyLib.treeSize","forall a .\nx1:(MyLib.BinaryTree a) -> {VV : GHC.Types.Int | VV == treeSize x1\n                                                 && VV >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":39,"endLine":16,"filename":"src/MyLib.hs","startCol":25,"startLine":16}},[["lq_anf$##7205759403792805427","GHC.Types.Int"]]],[{"realSpan":true,"spanInfo":{"endCol":63,"endLine":23,"filename":"src/MyLib.hs","startCol":62,"startLine":23}},[["y","{VV : a | VV == y}"]]],[{"realSpan":true,"spanInfo":{"endCol":47,"endLine":23,"filename":"src/MyLib.hs","startCol":46,"startLine":23}},[["y","{VV : a | VV == y}"]]],[{"realSpan":true,"spanInfo":{"endCol":66,"endLine":23,"filename":"src/MyLib.hs","startCol":1,"startLine":21}},[["lq_anf$##7205759403792805433","{v : GHC.Types.Bool | v <=> x <= y}"]]],[{"realSpan":true,"spanInfo":{"endCol":49,"endLine":22,"filename":"src/MyLib.hs","startCol":48,"startLine":22}},[["l","{v : (MyLib.BinaryTree a) | v == l\n                            && treeSize v >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":47,"endLine":22,"filename":"src/MyLib.hs","startCol":46,"startLine":22}},[["y","{VV : a | VV == y}"]]],[{"realSpan":true,"spanInfo":{"endCol":26,"endLine":15,"filename":"src/MyLib.hs","startCol":25,"startLine":15}},[["lq_anf$##7205759403792805423","{v : GHC.Prim.Int# | v == 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":37,"endLine":21,"filename":"src/MyLib.hs","startCol":21,"startLine":21}},[["lq_anf$##7205759403792805431","{v : (MyLib.BinaryTree a) | treeSize v == 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":31,"endLine":7,"filename":"src/MyLib.hs","startCol":1,"startLine":7}},[["System.IO.putStrLn","[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"realSpan":true,"spanInfo":{"endCol":51,"endLine":22,"filename":"src/MyLib.hs","startCol":41,"startLine":22}},[["MyLib.Node","{VV : forall a .\n      a -> x2:(MyLib.BinaryTree a) -> x3:(MyLib.BinaryTree a) -> {v : (MyLib.BinaryTree a) | treeSize v == (1 + treeSize x2) + treeSize x3} | VV == Node}"]]],[{"realSpan":true,"spanInfo":{"endCol":26,"endLine":16,"filename":"src/MyLib.hs","startCol":25,"startLine":16}},[["lq_anf$##7205759403792805425","GHC.Types.Int"]]],[{"realSpan":true,"spanInfo":{"endCol":52,"endLine":16,"filename":"src/MyLib.hs","startCol":1,"startLine":15}},[["lq_anf$##7205759403792805422","(MyLib.BinaryTree a)"]]],[{"realSpan":true,"spanInfo":{"endCol":27,"endLine":21,"filename":"src/MyLib.hs","startCol":26,"startLine":21}},[["x","{VV : a | VV == x}"]]],[{"realSpan":true,"spanInfo":{"endCol":52,"endLine":16,"filename":"src/MyLib.hs","startCol":25,"startLine":16}},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"realSpan":true,"spanInfo":{"endCol":31,"endLine":7,"filename":"src/MyLib.hs","startCol":21,"startLine":7}},[["lq_anf$##7205759403792805421","[GHC.Types.Char]"]]],[{"realSpan":true,"spanInfo":{"endCol":13,"endLine":21,"filename":"src/MyLib.hs","startCol":12,"startLine":21}},[["x","a"]]],[{"realSpan":true,"spanInfo":{"endCol":66,"endLine":23,"filename":"src/MyLib.hs","startCol":50,"startLine":23}},[["lq_anf$##7205759403792805434","{v : (MyLib.BinaryTree a) | treeSize v == treeSize r + 1}"]]],[{"realSpan":true,"spanInfo":{"endCol":30,"endLine":22,"filename":"src/MyLib.hs","startCol":29,"startLine":22}},[["x","{VV : a | VV == x}"]]],[{"realSpan":true,"spanInfo":{"endCol":52,"endLine":16,"filename":"src/MyLib.hs","startCol":51,"startLine":16}},[["r","{v : (MyLib.BinaryTree a) | v == r}"]]]],"o_templs":[[{"realSpan":true,"spanInfo":{"endCol":1,"endLine":1,"filename":"src/MyLib.hs","startCol":1,"startLine":1}},[["MyLib.$trModule","{VV##1194 : GHC.Types.Module | $k_##1195}"]]],[{"realSpan":true,"spanInfo":{"endCol":52,"endLine":16,"filename":"src/MyLib.hs","startCol":42,"startLine":16}},[["lq_anf$##7205759403792805428","{lq_tmp$x##990 : GHC.Types.Int | lq_tmp$x##990 == MyLib.treeSize r##a24B\n                                 && lq_tmp$x##990 >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":66,"endLine":23,"filename":"src/MyLib.hs","startCol":41,"startLine":23}},[["MyLib.Node","{VV : forall a .\n      lq_tmp$x##1154:a -> lq_tmp$x##1155:(MyLib.BinaryTree a) -> lq_tmp$x##1156:(MyLib.BinaryTree a) -> {lq_tmp$x##1150 : (MyLib.BinaryTree a) | MyLib.treeSize lq_tmp$x##1150 == (1 + MyLib.treeSize lq_tmp$x##1155) + MyLib.treeSize lq_tmp$x##1156} | VV == MyLib.Node}"]]],[{"realSpan":true,"spanInfo":{"endCol":35,"endLine":22,"filename":"src/MyLib.hs","startCol":29,"startLine":22}},[["lq_anf$##7205759403792805432","{lq_tmp$x##1100 : GHC.Types.Bool | lq_tmp$x##1100 <=> x##a24C <= y##a24E}"]]],[{"realSpan":true,"spanInfo":{"endCol":9,"endLine":7,"filename":"src/MyLib.hs","startCol":1,"startLine":7}},[["MyLib.someFunc","(GHC.Types.IO ())"]]],[{"realSpan":true,"spanInfo":{"endCol":32,"endLine":21,"filename":"src/MyLib.hs","startCol":28,"startLine":21}},[[null,"{VV : forall a .\n      {lq_tmp$x##1034 : (MyLib.BinaryTree a) | MyLib.treeSize lq_tmp$x##1034 == 0} | VV == MyLib.Leaf}"]]],[{"realSpan":true,"spanInfo":{"endCol":11,"endLine":21,"filename":"src/MyLib.hs","startCol":1,"startLine":21}},[["MyLib.treeInsert","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##1016:a -> lq_tmp$x##1017:(MyLib.BinaryTree a) -> {w : (MyLib.BinaryTree a) | MyLib.treeSize w == MyLib.treeSize lq_tmp$x##1017 + 1}"]]],[{"realSpan":true,"spanInfo":{"endCol":39,"endLine":16,"filename":"src/MyLib.hs","startCol":38,"startLine":16}},[["l","{lq_tmp$x##969 : (MyLib.BinaryTree a) | lq_tmp$x##969 == l##a24A}"]]],[{"realSpan":true,"spanInfo":{"endCol":39,"endLine":16,"filename":"src/MyLib.hs","startCol":29,"startLine":16}},[["lq_anf$##7205759403792805426","{lq_tmp$x##962 : GHC.Types.Int | lq_tmp$x##962 == MyLib.treeSize l##a24A\n                                 && lq_tmp$x##962 >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":37,"endLine":21,"filename":"src/MyLib.hs","startCol":33,"startLine":21}},[[null,"{VV : forall a .\n      {lq_tmp$x##1040 : (MyLib.BinaryTree a) | MyLib.treeSize lq_tmp$x##1040 == 0} | VV == MyLib.Leaf}"]]],[{"realSpan":true,"spanInfo":{"endCol":35,"endLine":22,"filename":"src/MyLib.hs","startCol":34,"startLine":22}},[["y","{lq_tmp$x##1113 : a | lq_tmp$x##1113 == y##a24E}"]]],[{"realSpan":true,"spanInfo":{"endCol":51,"endLine":22,"filename":"src/MyLib.hs","startCol":50,"startLine":22}},[["r","{lq_tmp$x##1190 : (MyLib.BinaryTree a) | lq_tmp$x##1190 == r##a24G\n                                         && MyLib.treeSize lq_tmp$x##1190 >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":65,"endLine":23,"filename":"src/MyLib.hs","startCol":64,"startLine":23}},[["r","{lq_tmp$x##1142 : (MyLib.BinaryTree a) | lq_tmp$x##1142 == r##a24G\n                                         && MyLib.treeSize lq_tmp$x##1142 >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":49,"endLine":23,"filename":"src/MyLib.hs","startCol":48,"startLine":23}},[["l","{lq_tmp$x##1162 : (MyLib.BinaryTree a) | lq_tmp$x##1162 == l##a24F\n                                         && MyLib.treeSize lq_tmp$x##1162 >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":9,"endLine":15,"filename":"src/MyLib.hs","startCol":1,"startLine":15}},[["MyLib.treeSize","forall a .\nlq_tmp$x##901:(MyLib.BinaryTree a) -> {VV : GHC.Types.Int | VV == MyLib.treeSize lq_tmp$x##901\n                                                            && VV >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":39,"endLine":16,"filename":"src/MyLib.hs","startCol":25,"startLine":16}},[["lq_anf$##7205759403792805427","{lq_tmp$x##982 : GHC.Types.Int | lq_tmp$x##982 == lq_anf$##7205759403792805425##d34J + lq_anf$##7205759403792805426##d34K}"]]],[{"realSpan":true,"spanInfo":{"endCol":63,"endLine":23,"filename":"src/MyLib.hs","startCol":62,"startLine":23}},[["y","{lq_tmp$x##1140 : a | lq_tmp$x##1140 == y##a24E}"]]],[{"realSpan":true,"spanInfo":{"endCol":47,"endLine":23,"filename":"src/MyLib.hs","startCol":46,"startLine":23}},[["y","{lq_tmp$x##1160 : a | lq_tmp$x##1160 == y##a24E}"]]],[{"realSpan":true,"spanInfo":{"endCol":66,"endLine":23,"filename":"src/MyLib.hs","startCol":1,"startLine":21}},[["lq_anf$##7205759403792805433","{lq_tmp$x##1115 : GHC.Types.Bool | (lq_tmp$x##1115 <=> x##a24C <= y##a24E)\n                                   && lq_tmp$x##1115 == lq_anf$##7205759403792805432##d34Q}"]]],[{"realSpan":true,"spanInfo":{"endCol":49,"endLine":22,"filename":"src/MyLib.hs","startCol":48,"startLine":22}},[["l","{lq_tmp$x##1188 : (MyLib.BinaryTree a) | lq_tmp$x##1188 == l##a24F\n                                         && MyLib.treeSize lq_tmp$x##1188 >= 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":47,"endLine":22,"filename":"src/MyLib.hs","startCol":46,"startLine":22}},[["y","{lq_tmp$x##1186 : a | lq_tmp$x##1186 == y##a24E}"]]],[{"realSpan":true,"spanInfo":{"endCol":26,"endLine":15,"filename":"src/MyLib.hs","startCol":25,"startLine":15}},[["lq_anf$##7205759403792805423","{lq_tmp$x##915 : GHC.Prim.Int# | lq_tmp$x##915 == 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":37,"endLine":21,"filename":"src/MyLib.hs","startCol":21,"startLine":21}},[["lq_anf$##7205759403792805431","{lq_tmp$x##1040 : (MyLib.BinaryTree {lq_tmp$x##1043 : a | $k_##1042[VV##1041:=lq_tmp$x##1043]}) | MyLib.treeSize lq_tmp$x##1040 == 0}"]]],[{"realSpan":true,"spanInfo":{"endCol":31,"endLine":7,"filename":"src/MyLib.hs","startCol":1,"startLine":7}},[["System.IO.putStrLn","lq_tmp$x##893:[GHC.Types.Char] -> (GHC.Types.IO ())"]]],[{"realSpan":true,"spanInfo":{"endCol":51,"endLine":22,"filename":"src/MyLib.hs","startCol":41,"startLine":22}},[["MyLib.Node","{VV : forall a .\n      lq_tmp$x##1180:a -> lq_tmp$x##1181:(MyLib.BinaryTree a) -> lq_tmp$x##1182:(MyLib.BinaryTree a) -> {lq_tmp$x##1176 : (MyLib.BinaryTree a) | MyLib.treeSize lq_tmp$x##1176 == (1 + MyLib.treeSize lq_tmp$x##1181) + MyLib.treeSize lq_tmp$x##1182} | VV == MyLib.Node}"]]],[{"realSpan":true,"spanInfo":{"endCol":26,"endLine":16,"filename":"src/MyLib.hs","startCol":25,"startLine":16}},[["lq_anf$##7205759403792805425","{lq_tmp$x##955 : GHC.Types.Int | lq_tmp$x##955 == (lq_anf$##7205759403792805424##d34I : int)}"]]],[{"realSpan":true,"spanInfo":{"endCol":52,"endLine":16,"filename":"src/MyLib.hs","startCol":1,"startLine":15}},[["lq_anf$##7205759403792805422","{lq_tmp$x##905 : (MyLib.BinaryTree a) | lq_tmp$x##905 == ds_d2W8}"]]],[{"realSpan":true,"spanInfo":{"endCol":27,"endLine":21,"filename":"src/MyLib.hs","startCol":26,"startLine":21}},[["x","{lq_tmp$x##1061 : a | lq_tmp$x##1061 == x##a24C}"]]],[{"realSpan":true,"spanInfo":{"endCol":52,"endLine":16,"filename":"src/MyLib.hs","startCol":25,"startLine":16}},[["GHC.Num.$fNumInt","{lq_tmp$x##1012 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1012 == GHC.Num.$fNumInt}"]]],[{"realSpan":true,"spanInfo":{"endCol":31,"endLine":7,"filename":"src/MyLib.hs","startCol":21,"startLine":7}},[["lq_anf$##7205759403792805421","{lq_tmp$x##879 : [GHC.Types.Char] | len lq_tmp$x##879 == strLen lq_anf$##7205759403792805420##d34E\n                                    && lq_tmp$x##879 ~~ lq_anf$##7205759403792805420##d34E}"]]],[{"realSpan":true,"spanInfo":{"endCol":13,"endLine":21,"filename":"src/MyLib.hs","startCol":12,"startLine":21}},[["x","a"]]],[{"realSpan":true,"spanInfo":{"endCol":66,"endLine":23,"filename":"src/MyLib.hs","startCol":50,"startLine":23}},[["lq_anf$##7205759403792805434","{lq_tmp$x##1128 : (MyLib.BinaryTree {lq_tmp$x##1137 : a | $k_##1136[VV##1135:=lq_tmp$x##1137][lq_tmp$x##1132:=fix$36$$36$dOrd_a26v][lq_tmp$x##1133:=y##a24E][lq_tmp$x##1134:=r##a24G]}) | MyLib.treeSize lq_tmp$x##1128 == MyLib.treeSize r##a24G + 1}"]]],[{"realSpan":true,"spanInfo":{"endCol":30,"endLine":22,"filename":"src/MyLib.hs","startCol":29,"startLine":22}},[["x","{lq_tmp$x##1112 : a | lq_tmp$x##1112 == x##a24C}"]]],[{"realSpan":true,"spanInfo":{"endCol":52,"endLine":16,"filename":"src/MyLib.hs","startCol":51,"startLine":16}},[["r","{lq_tmp$x##997 : (MyLib.BinaryTree a) | lq_tmp$x##997 == r##a24B}"]]]],"o_bots":[],"o_result":{"tag":"Unsafe","contents":[{"numCstr":5,"numIter":5,"numBrkt":5,"numChck":5,"numVald":4},[{"msg":"Liquid Type Mismatch\n    .\n    The inferred type\n      VV : {v : (MyLib.BinaryTree a) | MyLib.treeSize v == (1 + MyLib.treeSize l) + MyLib.treeSize r\n                                       && MyLib.treeSize v >= 0}\n    .\n    is not a subtype of the required type\n      VV : {VV : (MyLib.BinaryTree a) | MyLib.treeSize VV == MyLib.treeSize ?a + 1}\n    .\n    in the context\n      l : {l : (MyLib.BinaryTree a) | MyLib.treeSize l >= 0}\n       \n      ?a : {?a : (MyLib.BinaryTree a) | MyLib.treeSize ?a >= 0}\n       \n      r : {r : (MyLib.BinaryTree a) | MyLib.treeSize r >= 0}\n    Constraint id 11","pos":{"realSpan":true,"spanInfo":{"endCol":51,"endLine":22,"filename":"src/MyLib.hs","startCol":41,"startLine":22}}}]]}}