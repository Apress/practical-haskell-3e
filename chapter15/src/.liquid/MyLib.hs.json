{"errors":[{"message":"Type Mismatch\n    .\n    The inferred type\n      VV : {v : (MyLib.BinaryTree a) | MyLib.treeSize v == (1 + MyLib.treeSize l) + MyLib.treeSize r\n                                       && MyLib.treeSize v >= 0}\n    .\n    is not a subtype of the required type\n      VV : {VV : (MyLib.BinaryTree a) | MyLib.treeSize VV == MyLib.treeSize ?a + 1}\n    .\n    in the context\n      l : {l : (MyLib.BinaryTree a) | MyLib.treeSize l >= 0}\n       \n      ?a : {?a : (MyLib.BinaryTree a) | MyLib.treeSize ?a >= 0}\n       \n      r : {r : (MyLib.BinaryTree a) | MyLib.treeSize r >= 0}\n    Constraint id 11","start":{"column":41,"line":22},"stop":{"column":51,"line":22}}],"sptypes":[{"ann":"GHC.Types.Module","ident":"MyLib.$trModule","start":{"column":1,"line":1},"stop":{"column":1,"line":1}},{"ann":"(GHC.Types.IO ())","ident":"MyLib.someFunc","start":{"column":1,"line":7},"stop":{"column":9,"line":7}},{"ann":"[GHC.Types.Char]","ident":"lq_anf$##7205759403792805421","start":{"column":21,"line":7},"stop":{"column":31,"line":7}},{"ann":"forall a .\nx1:(MyLib.BinaryTree a) -> {VV : GHC.Types.Int | VV == treeSize x1\n                                                 && VV >= 0}","ident":"MyLib.treeSize","start":{"column":1,"line":15},"stop":{"column":9,"line":15}},{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805423","start":{"column":25,"line":15},"stop":{"column":26,"line":15}},{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805425","start":{"column":25,"line":16},"stop":{"column":26,"line":16}},{"ann":"{v : GHC.Types.Int | v == treeSize l\n                     && v >= 0}","ident":"lq_anf$##7205759403792805426","start":{"column":29,"line":16},"stop":{"column":39,"line":16}},{"ann":"{v : (MyLib.BinaryTree a) | v == l}","ident":"l","start":{"column":38,"line":16},"stop":{"column":39,"line":16}},{"ann":"{v : GHC.Types.Int | v == treeSize r\n                     && v >= 0}","ident":"lq_anf$##7205759403792805428","start":{"column":42,"line":16},"stop":{"column":52,"line":16}},{"ann":"{v : (MyLib.BinaryTree a) | v == r}","ident":"r","start":{"column":51,"line":16},"stop":{"column":52,"line":16}},{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(MyLib.BinaryTree a) -> {w : (MyLib.BinaryTree a) | treeSize w == treeSize x3 + 1}","ident":"MyLib.treeInsert","start":{"column":1,"line":21},"stop":{"column":11,"line":21}},{"ann":"a","ident":"x","start":{"column":12,"line":21},"stop":{"column":13,"line":21}},{"ann":"{v : (MyLib.BinaryTree a) | treeSize v == 0}","ident":"lq_anf$##7205759403792805431","start":{"column":21,"line":21},"stop":{"column":37,"line":21}},{"ann":"{VV : a | VV == x}","ident":"x","start":{"column":26,"line":21},"stop":{"column":27,"line":21}},{"ann":"{VV : forall a .\n      {v : (MyLib.BinaryTree a) | treeSize v == 0} | VV == Leaf}","ident":"_","start":{"column":28,"line":21},"stop":{"column":32,"line":21}},{"ann":"{VV : forall a .\n      {v : (MyLib.BinaryTree a) | treeSize v == 0} | VV == Leaf}","ident":"_","start":{"column":33,"line":21},"stop":{"column":37,"line":21}},{"ann":"{VV : a | VV == x}","ident":"x","start":{"column":29,"line":22},"stop":{"column":30,"line":22}},{"ann":"{VV : a | VV == y}","ident":"y","start":{"column":34,"line":22},"stop":{"column":35,"line":22}},{"ann":"{VV : forall a .\n      a -> x2:(MyLib.BinaryTree a) -> x3:(MyLib.BinaryTree a) -> {v : (MyLib.BinaryTree a) | treeSize v == (1 + treeSize x2) + treeSize x3} | VV == Node}","ident":"MyLib.Node","start":{"column":41,"line":22},"stop":{"column":51,"line":22}},{"ann":"{VV : a | VV == y}","ident":"y","start":{"column":46,"line":22},"stop":{"column":47,"line":22}},{"ann":"{v : (MyLib.BinaryTree a) | v == l\n                            && treeSize v >= 0}","ident":"l","start":{"column":48,"line":22},"stop":{"column":49,"line":22}},{"ann":"{v : (MyLib.BinaryTree a) | v == r\n                            && treeSize v >= 0}","ident":"r","start":{"column":50,"line":22},"stop":{"column":51,"line":22}},{"ann":"{VV : forall a .\n      a -> x2:(MyLib.BinaryTree a) -> x3:(MyLib.BinaryTree a) -> {v : (MyLib.BinaryTree a) | treeSize v == (1 + treeSize x2) + treeSize x3} | VV == Node}","ident":"MyLib.Node","start":{"column":41,"line":23},"stop":{"column":66,"line":23}},{"ann":"{VV : a | VV == y}","ident":"y","start":{"column":46,"line":23},"stop":{"column":47,"line":23}},{"ann":"{v : (MyLib.BinaryTree a) | v == l\n                            && treeSize v >= 0}","ident":"l","start":{"column":48,"line":23},"stop":{"column":49,"line":23}},{"ann":"{v : (MyLib.BinaryTree a) | treeSize v == treeSize r + 1}","ident":"lq_anf$##7205759403792805434","start":{"column":50,"line":23},"stop":{"column":66,"line":23}},{"ann":"{VV : a | VV == y}","ident":"y","start":{"column":62,"line":23},"stop":{"column":63,"line":23}},{"ann":"{v : (MyLib.BinaryTree a) | v == r\n                            && treeSize v >= 0}","ident":"r","start":{"column":64,"line":23},"stop":{"column":65,"line":23}}],"status":"unsafe","types":{"1":{"1":{"ann":"GHC.Types.Module","col":1,"ident":"MyLib.$trModule","row":1}},"15":{"1":{"ann":"forall a .\nx1:(MyLib.BinaryTree a) -> {VV : GHC.Types.Int | VV == treeSize x1\n                                                 && VV >= 0}","col":1,"ident":"MyLib.treeSize","row":15},"25":{"ann":"{v : GHC.Prim.Int# | v == 0}","col":25,"ident":"lq_anf$##7205759403792805423","row":15}},"16":{"25":{"ann":"GHC.Types.Int","col":25,"ident":"lq_anf$##7205759403792805425","row":16},"29":{"ann":"{v : GHC.Types.Int | v == treeSize l\n                     && v >= 0}","col":29,"ident":"lq_anf$##7205759403792805426","row":16},"38":{"ann":"{v : (MyLib.BinaryTree a) | v == l}","col":38,"ident":"l","row":16},"42":{"ann":"{v : GHC.Types.Int | v == treeSize r\n                     && v >= 0}","col":42,"ident":"lq_anf$##7205759403792805428","row":16},"51":{"ann":"{v : (MyLib.BinaryTree a) | v == r}","col":51,"ident":"r","row":16}},"21":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(MyLib.BinaryTree a) -> {w : (MyLib.BinaryTree a) | treeSize w == treeSize x3 + 1}","col":1,"ident":"MyLib.treeInsert","row":21},"12":{"ann":"a","col":12,"ident":"x","row":21},"21":{"ann":"{v : (MyLib.BinaryTree a) | treeSize v == 0}","col":21,"ident":"lq_anf$##7205759403792805431","row":21},"26":{"ann":"{VV : a | VV == x}","col":26,"ident":"x","row":21},"28":{"ann":"{VV : forall a .\n      {v : (MyLib.BinaryTree a) | treeSize v == 0} | VV == Leaf}","col":28,"ident":"_","row":21},"33":{"ann":"{VV : forall a .\n      {v : (MyLib.BinaryTree a) | treeSize v == 0} | VV == Leaf}","col":33,"ident":"_","row":21}},"22":{"29":{"ann":"{VV : a | VV == x}","col":29,"ident":"x","row":22},"34":{"ann":"{VV : a | VV == y}","col":34,"ident":"y","row":22},"41":{"ann":"{VV : forall a .\n      a -> x2:(MyLib.BinaryTree a) -> x3:(MyLib.BinaryTree a) -> {v : (MyLib.BinaryTree a) | treeSize v == (1 + treeSize x2) + treeSize x3} | VV == Node}","col":41,"ident":"MyLib.Node","row":22},"46":{"ann":"{VV : a | VV == y}","col":46,"ident":"y","row":22},"48":{"ann":"{v : (MyLib.BinaryTree a) | v == l\n                            && treeSize v >= 0}","col":48,"ident":"l","row":22},"50":{"ann":"{v : (MyLib.BinaryTree a) | v == r\n                            && treeSize v >= 0}","col":50,"ident":"r","row":22}},"23":{"41":{"ann":"{VV : forall a .\n      a -> x2:(MyLib.BinaryTree a) -> x3:(MyLib.BinaryTree a) -> {v : (MyLib.BinaryTree a) | treeSize v == (1 + treeSize x2) + treeSize x3} | VV == Node}","col":41,"ident":"MyLib.Node","row":23},"46":{"ann":"{VV : a | VV == y}","col":46,"ident":"y","row":23},"48":{"ann":"{v : (MyLib.BinaryTree a) | v == l\n                            && treeSize v >= 0}","col":48,"ident":"l","row":23},"50":{"ann":"{v : (MyLib.BinaryTree a) | treeSize v == treeSize r + 1}","col":50,"ident":"lq_anf$##7205759403792805434","row":23},"62":{"ann":"{VV : a | VV == y}","col":62,"ident":"y","row":23},"64":{"ann":"{v : (MyLib.BinaryTree a) | v == r\n                            && treeSize v >= 0}","col":64,"ident":"r","row":23}},"7":{"1":{"ann":"(GHC.Types.IO ())","col":1,"ident":"MyLib.someFunc","row":7},"21":{"ann":"[GHC.Types.Char]","col":21,"ident":"lq_anf$##7205759403792805421","row":7}}}}